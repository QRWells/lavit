plugins {
    id 'java'
    id 'idea'
    id 'application'
}

repositories {
    mavenCentral()
}

ext.extractVersion = { String s ->
    // version format: versionX.Y.Z
    def m = s =~ /version(\d+\.\d+\.\d+)/
    if (m) {
        return m[0][1]
    } else {
        return '0.0.0'
    }
}

group = 'jp.ac.waseda.info.ueda'
version = ext.extractVersion(new File('version.txt').text)

sourceSets {
    main {
        java {
            srcDirs = ['src', 'gen']
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.register('copyResource', Copy) {
    from 'gen/lavit/localizedtext/res'
    into 'build/classes/java/main/lavit/localizedtext/res'
}

compileJava.dependsOn(copyResource) // for running from IDE directly

// Distribution
// TODO: archive structure

distTar {
    archiveBaseName = 'LaViT'
    archiveVersion = version.toString()

    from('.') {
        include 'demo/**'
        include 'run.*'
        include 'version.txt'
    }
}

distZip {
    archiveBaseName = 'LaViT'
    archiveVersion = version.toString()

    from('.') {
        include 'demo/**'
        include 'run.*'
        include 'version.txt'
    }
}

// Configuration for generated jar

jar {
    archiveBaseName = 'LaViT'
    version = '' // remove version from jar name

    from('.') {
        include 'img/**'
        include 'lang/**'
    }

    from('src') {
        include '**/*.txt'
    }

    into('extgui') {
        from('src/extgui'){
            include '**/*.png'
        }
    }

    manifest {
        attributes 'Main-Class': 'lavit.FrontEnd'
    }
}